#include <bits/stdc++.h>
using namespace std;

int main() {
  long long X, K, D, n;
  cin >> X >> K >> D;
  X = abs(X);  // X >= 0で考える(絶対値なので)
  n = X / D;
  if (n > K) {  // XがD以下になるために、K回より多く移動しないといけないとき
    X -= D *
         K;  // マイナス方向にDだけ移動をK回だけ繰り返す(これが一番近づけられる)
  } else {   // K回以下でXがD以下になれるとき
    X -= n * D;        // XをD以下にする
    K -= n;            // XがD以下になるまでの回数を引く
    if (K % 2 == 1) {  //残り回数が奇数回のとき
      X = abs(X - D);
    }
    //--(X-2D)----------(X-D)----(0)------(X)----------(X+D)----------(X+2D)
    //                         4       6
    // 残り奇数回→(X-(奇数)D)に動く→最も絶対値が小さいのは(X-D)(←負なので絶対値に直すことに注意)
    // 残り偶数回→(X-(偶数)D)に動く→最も絶対値が小さいのは(X)
  }
  cout << X << endl;
}
